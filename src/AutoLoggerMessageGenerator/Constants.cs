using System.Collections.Generic;

namespace AutoLoggerMessageGenerator;

internal static class Constants
{
    public const string DefaultLoggingNamespace = "Microsoft.Extensions.Logging";
    public const string GeneratorNamespace = $"{DefaultLoggingNamespace}.AutoLoggerMessage";

    public const string InterceptorNamespace = "System.Runtime.CompilerServices";
    public const string InterceptorAttributeName = "InterceptsLocationAttribute";

    public const string LogMethodPrefix = "Log_";
    public const string LoggerClassName = "AutoLoggerMessage";
    
    public const string ArgumentName = "@arg";
    public const string LoggerArgumentName = "@logger";
    public const string EventIdArgumentName = "@eventId";
    public const string LogLevelArgumentName = "@logLevel";
    public const string ExceptionArgumentName = "@exception";
    public const string MessageArgumentName = "@message";
    
    public static readonly HashSet<string> ReservedArgumentNames =
    [
        LoggerArgumentName, LogLevelArgumentName,
        ExceptionArgumentName, EventIdArgumentName,
        MessageArgumentName
    ];

    // List of parameters that will be moved to LoggerMessage attribute arguments
    public static readonly HashSet<string> LoggerMessageAttributeArguments =
        [LogLevelArgumentName, MessageArgumentName];
    
    /// <summary>
    /// Support for an arbitrary number of logging parameters. LoggerMessage.Define supports a maximum of six.
    /// Must be synced with LoggerMessageGenerator.Emitter;
    /// </summary>
    public const int MaxLogParameters = 6;

    public const string ExcludeFromCoverageAttribute =
        "[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]";
    public const string DebuggerStepThroughAttribute =
        "[System.Diagnostics.DebuggerStepThrough]";
    public static readonly string GeneratedCodeAttribute =
        $"[global::System.CodeDom.Compiler.GeneratedCodeAttribute(" +
        $"\"{typeof(Generators.AutoLoggerMessageGenerator).Assembly.GetName().Name}\", " +
        $"\"{typeof(Generators.AutoLoggerMessageGenerator).Assembly.GetName().Version}\")]";
    public const string EditorNotBrowsableAttribute = "[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]";

    public static string GeneratedFileHeader => """
                                                // <auto-generated/>
                                                #nullable enable

                                                using System;

                                                """;
}
